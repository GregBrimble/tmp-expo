name: Build and Deploy
on:
  push:
    branches:
      - main

jobs:
  build-js:
    name: Build JavaScript assets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node.js
        shell: bash -l {0}
        run: nvm install && nvm use
        # TODO: Could cache ~/.nvm/.cache
      - name: Cache Node.js
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Setup Expo
        uses: expo/expo-github-action@v5
        with:
          expo-version: 4.0.15
          expo-packager: npm
          expo-cache: true
      - name: Install Node.js dependencies
        run: npm ci
      - name: Build JavaScript assets
        run: expo export --public-url "$PUBLIC_URL"
        env:
          PUBLIC_URL: https://gregbrimble.com/
      - name: Upload artifacts to GitHub Actions
        uses: actions/upload-artifact@v2
        with:
          name: js-assets
          path: dist/
  build-web:
    name: Build web assets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node.js
        shell: bash -l {0}
        run: nvm install && nvm use
        # TODO: Could cache ~/.nvm/.cache
      - name: Cache Node.js
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Setup Expo
        uses: expo/expo-github-action@v5
        with:
          expo-version: 4.0.15
          expo-packager: npm
          expo-cache: true
      - name: Install Node.js dependencies
        run: npm ci
      - name: Build web
        run: expo build:web
      - name: Upload artifacts to GitHub Actions
        uses: actions/upload-artifact@v2
        with:
          name: web-assets
          path: web-build/
  deploy-web-js-api:
    name: Deploy web, JavaScript and API
    needs: [build-js, build-web]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node.js
        shell: bash -l {0}
        run: nvm install && nvm use
        # TODO: Could cache ~/.nvm/.cache
      - name: Cache Node.js
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Node.js dependencies
        run: npm ci
      - name: Download web artifacts
        uses: actions/download-artifact@v2
        with:
          name: web-assets
          path: dist
      - name: Download JavaScript artifacts
        uses: actions/download-artifact@v2
        with:
          name: js-assets
          path: web-build
      - name: Combine web and JavaScript artifacts
        run: mv dist/* web-build/
        # TODO: web-build files could get over-written. We might want to actually copy them to a directory (and change PUBLIC_URL as required).
      - name: Deploy artifacts and API
        run: npm run deploy
